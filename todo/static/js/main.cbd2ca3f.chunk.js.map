{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","liked","allPosts","React","createElement","className","SearchPanel","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","term","onUpdateSearch","bind","_assertThisInitialized","_inherits","_createClass","key","value","e","target","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","_this2","map","_this2$props","filter","onFilterSelect","clazz","concat","onClick","PostListItem","apply","arguments","_this$props","onDelete","onToggleImportant","onToggleChecked","onToggleLiked","like","important","checked","classNames","PostList","posts","elements","item","id","itemProps","_objectWithoutProperties","Object","assign","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","onToggleCheck","maxId","index","findIndex","elem","_toConsumableArray","slice","body","newItem","_ref2","_ref3","old","_objectSpread","_ref4","_ref5","items","length","toLowerCase","indexOf","_this$state","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbd2ca3f.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Teie nimi</h1>\r\n            <h2>{allPosts} kirjet, neist meeldis {liked}</h2> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: '', // Otsingutermin\r\n        };\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this); // Otsingu värskendamise funktsioon\r\n    }\r\n\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value; // Otsingutermini värskendamine\r\n        this.setState({ term });\r\n        this.props.onUpdateSearch(term); // Uuenda otsinguterminit\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Otsing kirjetes\" // Изменено на эстонский язык\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            { name: 'all', label: 'Kõik' }, // Изменено на эстонский язык\r\n            { name: 'like', label: 'Meeldis' }, // Изменено на эстонский язык\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const { filter, onFilterSelect } = this.props;\r\n            const active = filter === name; // Aktiivne filter\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n            \r\n            return (\r\n                <button\r\n                    type=\"button\"\r\n                    className={`btn ${clazz}`}\r\n                    key={name}\r\n                    onClick={() => onFilterSelect(name)}\r\n                >\r\n                    {label} {/* Filtri nimi */}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return <div className=\"btn-group\">{buttons}</div>;\r\n    }\r\n}\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, { Component } from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n    render() {\r\n        const { label, onDelete, onToggleImportant, onToggleChecked, onToggleLiked, like, important, checked } = this.props;\r\n        \r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        \r\n        if (important) {\r\n            classNames += ' important'; // Oluline kirje\r\n        }\r\n        if (like) {\r\n            classNames += ' like'; // Meeldinud kirje\r\n        }\r\n        if (checked) {\r\n            classNames += ' checked'; // Kontrollitud kirje\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span\r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button\r\n                    type=\"button\"\r\n                    className={`btn-star btn-sm ${important ? 'active' : ''}`} \r\n                    onClick={onToggleImportant}>\r\n                        <i className={`fa fa-star ${important ? 'active' : ''}`}></i>\r\n                    </button>\r\n                    <button\r\n                    type=\"button\"\r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`btn-check btn-sm ${checked ? 'active' : ''}`} \r\n                        onClick={onToggleChecked}>\r\n                        <i className={`fa fa-check ${checked ? 'active' : ''}`}></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked, onToggleChecked }) => {\r\n    const elements = posts.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem\r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)} // Kustutamise funktsioon\r\n                    onToggleImportant={() => onToggleImportant(id)} // Olulisuse vahetamise funktsioon\r\n                    onToggleLiked={() => onToggleLiked(id)} // Meeldimise vahetamise funktsioon\r\n                    onToggleChecked={() => onToggleChecked(id)} // Kontrollimise vahetamise funktsioon\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default PostList;\r\n","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.css'\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '' // Kirje tekst\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this); // Teksti muutmise funktsioon\r\n        this.onSubmit = this.onSubmit.bind(this); // Vormil esitlemise funktsioon\r\n    }\r\n    \r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value // Uuenda teksti staatust\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault(); // Vältige vormi vaikefunktsiooni\r\n        this.props.onAdd(this.state.text); // Lisage uus kirje\r\n        this.setState({\r\n            text:'' // Tühjendage sisend\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Mille üle sa mõtled praegu?\" // Изменено на эстонский язык\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Lisama {/* Изменено на эстонский язык */}\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import App from './app'\r\nexport default App;","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: 'Going to learn React', important: false, like: false, checked: false, id: 1 },\r\n                { label: 'That is so good', important: false, like: false, checked: false, id: 2 },\r\n                { label: 'I need a break…', important: false, like: false, checked: false, id: 3 },\r\n            ],\r\n            term: '', // Otsingutermin\r\n            filter: 'all', // Filtreerimise tüüp\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this); // Kirje kustutamise funktsioon\r\n        this.addItem = this.addItem.bind(this); // Uue kirje lisamise funktsioon\r\n        this.onToggleImportant = this.onToggleImportant.bind(this); // Olulisuse vahetamise funktsioon\r\n        this.onToggleLiked = this.onToggleLiked.bind(this); // Meeldimise vahetamise funktsioon\r\n        this.onToggleCheck = this.onToggleCheck.bind(this); // Kontrollimise vahetamise funktsioon\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this); // Otsingu värskendamise funktsioon\r\n        this.onFilterSelect = this.onFilterSelect.bind(this); // Filtri valimise funktsioon\r\n        this.maxId = 4; // Maksimaalne ID uutele kirjadele\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id); // Leida kirje indeks\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)]; // Uus massiiv ilma kustutatud kirjeteta\r\n            return {\r\n                data: newArr,\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body, // Kirje sisu\r\n            important: false,\r\n            checked: false,\r\n            id: this.maxId++, // Uue kirje ID\r\n        };\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem]; // Uus massiiv koos uue kirjega\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id); // Leida kirje indeks\r\n            const old = data[index]; // Vanade andmete salvestamine\r\n            const newItem = { ...old, important: !old.important }; // Olulisuse vahetamine\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]; // Uus massiiv koos muudetud kirjega\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id); // Leida kirje indeks\r\n            const old = data[index]; // Vanade andmete salvestamine\r\n            const newItem = { ...old, like: !old.like }; // Meeldimise vahetamine\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]; // Uus massiiv koos muudetud kirjega\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleCheck(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id); // Leida kirje indeks\r\n            const old = data[index]; // Vanade andmete salvestamine\r\n            const newItem = { ...old, checked: !old.checked }; // Kontrollimise vahetamine\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]; // Uus massiiv koos muudetud kirjega\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items; // Kui otsingutermin on tühi, tagasta kõik kirjed\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1; // Otsingufunktsioon\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like); // Tagasta ainult \"meeldinud\" kirjed\r\n        } else {\r\n            return items; // Tagasta kõik kirjed\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({ term }); // Uuenda otsinguterminit\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({ filter }); // Uuenda filtrit\r\n    }\r\n\r\n    render() {\r\n        const { data, term, filter } = this.state;\r\n        const liked = data.filter((item) => item.like).length; // Meeldinud kirjade arv\r\n        const allPosts = data.length; // Kõikide kirjade arv\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter); // Nähtavad kirjed\r\n        \r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader liked={liked} allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter filter={filter} onFilterSelect={this.onFilterSelect} />\r\n                </div>\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                    onToggleChecked={this.onToggleCheck} // Ülekandmine\r\n                />\r\n                <PostAddForm onAdd={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app/'; // Corrected the import path\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}